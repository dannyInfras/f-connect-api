name: Deploy to DigitalOcean (Docker Compose)

on:
  push:
    branches:
      - develop

jobs:
  deploy:
    name: üê≥ Deploy with Docker Compose
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup SSH agent
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.DO_SSH_PRIVATE_KEY }}

      - name: Add droplet to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.DO_DEPLOY_HOST }} >> ~/.ssh/known_hosts

      - name: Sync project
        run: |
          rsync -avz --delete \
            --exclude='.git' \
            --exclude='node_modules' \
            --exclude='logs' \
            --exclude='dist' \
            ./ \
            ${{ secrets.DO_DEPLOY_USER }}@${{ secrets.DO_DEPLOY_HOST }}:${{ secrets.DEPLOY_PATH }}

      - name: Deploy development environment
        run: |
          ssh -o BatchMode=yes -o StrictHostKeyChecking=no \
            ${{ secrets.DO_DEPLOY_USER }}@${{ secrets.DO_DEPLOY_HOST }} << 'EOF'
            # copy env and tighten permissions
            cp -r ${{ secrets.SECRET_PATH }}/.env ${{ secrets.DEPLOY_PATH }}/.env
            chmod 600 ${{ secrets.DEPLOY_PATH }}/.env

            cd ${{ secrets.DEPLOY_PATH }}

            docker compose config > /dev/null
            docker compose down --rmi local || true
            docker compose up -d --build --no-deps app
            docker image prune -f
          EOF

      - name: Healthcheck
        id: healthcheck
        run: |
          echo "üîç Healthcheck started"
          for i in {1..5}; do
            if curl -sSf http://${{ secrets.DO_DEPLOY_HOST }}:${{ secrets.DEPLOY_PORT }}/${{ secrets.HEALTHCHECK_PATH }}; then
              echo "‚úÖ App is healthy."
              echo "status=success" >> $GITHUB_OUTPUT
              exit 0
            fi
            echo "Waiting for app‚Ä¶ ($i/5)"
            sleep 10
          done
          echo "‚ùå Healthcheck failed."
          echo "status=failure" >> $GITHUB_OUTPUT
          exit 1

      - name: Send deployment report to Slack
        if: always()
        uses: slackapi/slack-github-action@v1.23.0
        with:
          payload: |
            {
              "text": "Deployment Report",
              "blocks": [
                {
                  "type": "header",
                  "text": {
                    "type": "plain_text",
                    "text": "Deployment Report"
                  }
                },
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "*Status:* ${{ steps.healthcheck.outcome == 'success' && '‚úÖ Success' || '‚ùå Failed' }}"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Branch:* ${{ github.ref_name }}"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Commit:* ${{ github.sha }}"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Triggered by:* ${{ github.actor }}"
                    }
                  ]
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*<${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|View Workflow Run>*"
                  }
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
